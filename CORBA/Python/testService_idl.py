# Python stubs generated by omniidl from testService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

# #include "InterfaceDataTypes.idl"
import InterfaceDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "testOpenRTM"
#
__name__ = "testOpenRTM"
_0_testOpenRTM = omniORB.openModule("testOpenRTM", r"testService.idl")
_0_testOpenRTM__POA = omniORB.openModule("testOpenRTM__POA", r"testService.idl")


# interface testService
_0_testOpenRTM._d_testService = (omniORB.tcInternal.tv_objref, "IDL:testOpenRTM/testService:1.0", "testService")
omniORB.typeMapping["IDL:testOpenRTM/testService:1.0"] = _0_testOpenRTM._d_testService
_0_testOpenRTM.testService = omniORB.newEmptyClass()
class testService :
    _NP_RepositoryId = _0_testOpenRTM._d_testService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_testOpenRTM.testService = testService
_0_testOpenRTM._tc_testService = omniORB.tcInternal.createTypeCode(_0_testOpenRTM._d_testService)
omniORB.registerType(testService._NP_RepositoryId, _0_testOpenRTM._d_testService, _0_testOpenRTM._tc_testService)

# testService operations and attributes
testService._d_put = ((omniORB.typeMapping["IDL:RTC/CameraImage:1.0"], ), (), None)

# testService object reference
class _objref_testService (CORBA.Object):
    _NP_RepositoryId = testService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def put(self, *args):
        return self._obj.invoke("put", _0_testOpenRTM.testService._d_put, args)

omniORB.registerObjref(testService._NP_RepositoryId, _objref_testService)
_0_testOpenRTM._objref_testService = _objref_testService
del testService, _objref_testService

# testService skeleton
__name__ = "testOpenRTM__POA"
class testService (PortableServer.Servant):
    _NP_RepositoryId = _0_testOpenRTM.testService._NP_RepositoryId


    _omni_op_d = {"put": _0_testOpenRTM.testService._d_put}

testService._omni_skeleton = testService
_0_testOpenRTM__POA.testService = testService
omniORB.registerSkeleton(testService._NP_RepositoryId, testService)
del testService
__name__ = "testOpenRTM"

#
# End of module "testOpenRTM"
#
__name__ = "testService_idl"

_exported_modules = ( "testOpenRTM", )

# The end.
